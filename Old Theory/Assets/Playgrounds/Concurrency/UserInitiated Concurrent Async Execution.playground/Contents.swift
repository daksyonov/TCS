import UIKit
import PlaygroundSupport

PlaygroundPage.current.needsIndefiniteExecution = true

func ordinaryPriorityTask(_ symbol: String) {
	for i in 1...10 {
		print("\(symbol) â€“ \(i) priority = \(qos_class_self().rawValue)")
	}
}

/**
Here the execution will go by zig-zag if you will as each time the task is sent to the execution
the system can return to another task
*/

let concurrentPriorityQueue = DispatchQueue(label: "priority1", qos: .userInitiated, attributes: .concurrent)

concurrentPriorityQueue.async { ordinaryPriorityTask("ðŸ¥µ") }
concurrentPriorityQueue.async { ordinaryPriorityTask("ðŸ¥¶") }

/**
OUTPUT VARIANT:
ðŸ¥¶ â€“ 1 priority = 25
ðŸ¥µ â€“ 1 priority = 25
ðŸ¥¶ â€“ 2 priority = 25
ðŸ¥µ â€“ 2 priority = 25
ðŸ¥¶ â€“ 3 priority = 25
ðŸ¥µ â€“ 3 priority = 25
ðŸ¥¶ â€“ 4 priority = 25
ðŸ¥µ â€“ 4 priority = 25
ðŸ¥¶ â€“ 5 priority = 25
ðŸ¥µ â€“ 5 priority = 25
ðŸ¥¶ â€“ 6 priority = 25
ðŸ¥µ â€“ 6 priority = 25
ðŸ¥¶ â€“ 7 priority = 25
ðŸ¥µ â€“ 7 priority = 25
ðŸ¥¶ â€“ 8 priority = 25
ðŸ¥µ â€“ 8 priority = 25
ðŸ¥¶ â€“ 9 priority = 25
ðŸ¥µ â€“ 9 priority = 25
ðŸ¥¶ â€“ 10 priority = 25
ðŸ¥µ â€“ 10 priority = 25
*/
